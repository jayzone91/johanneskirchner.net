name: Deploy to Server

on:
  push:
    branches:
      - main

permissions:
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"

      - name: Install Templ
        run: go install github.com/a-h/templ/cmd/templ@latest

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Tailwind
        run: npm install tailwindcss @tailwindcss/cli

      - name: Generate Stop
        run: go generate

      - name: Test with the Go CLI
        run: go test

      - name: Build Step
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o johanneskirchner-${GITHUB_SHA}

      - name: Deploy Binary using SCP
        env:
          USER: deploy
          HOST: johanneskirchner.net
          DIR: /home/deploy/releases
          DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          echo "Host *" > ~/.ssh/config
          echo " StrictHostKeyChecking no" >> ~/.ssh/config
          echo " UserKnownHostsFile /dev/null" >> ~/.ssh/config

          # Create directory if it does't exist
          ssh -i ~/.ssh/id_rsa $USER@HOST mkdir -p $DIR

          # Copy the binary to the release
          scp -i ~/.ssh/id_rsa johanneskirchner-${GITHUB_SHA} $USER@HOST:$DIR

          # Run the deploy.sh script on the server
          ssh -i ~/.ssh/id_rsa $USER@$HOST 'bash -s' < ./deploy/deploy.sh $GITHUB_SHA
